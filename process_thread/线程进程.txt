1. 进程	
	狭义定义：进程是正在运行的程序的实例（an instance of a computer program that is being executed）。
	广义定义：进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。它是操作系统动态执行的基本单元，在传统的操作系统中，
	进程既是基本的分配单元，也是基本的执行单元。
	
进程具有的特征：


	动态性：进程是程序的一次执行过程，是临时的，有生命期的，是动态产生，动态消亡的；

	
并发性：任何进程都可以同其他进行一起并发执行；


	独立性：进程是系统进行资源分配和调度的一个独立单位；


	结构性：进程由程序，数据和进程控制块三部分组成

2.线程
	60年代，在OS中能拥有资源和独立运行的基本单位是进程，然而随着计算机技术的发展，进程出现了很多弊端，一是由于进程是资源拥有者，
	创建、撤消与切换存在较大的时空开销，因此需要引入轻型进程；二是由于对称多处理机（SMP）出现，可以满足多个运行单位，而多个进程并行开销过大。
	因此在80年代，出现了能独立运行的基本单位——线程（Threads）。
	线程特点：
	1）轻型实体
	  线程中的实体基本上不拥有系统资源，只是有一点必不可少的、能保证独立运行的资源。
	  线程的实体包括程序、数据和TCB。线程是动态概念，它的动态特性由线程控制块TCB（Thread Control Block）描述。TCB包括以下信息：
		（1）线程状态。
		（2）当线程不运行时，被保存的现场资源。
		（3）一组执行堆栈。
		（4）存放每个线程的局部变量主存区。
		（5）访问同一个进程中的主存和其它资源。
	  用于指示被执行指令序列的程序计数器、保留局部变量、少数状态参数和返回地址等的一组寄存器和堆栈。
	2）独立调度和分派的基本单位。
	  在多线程OS中，线程是能独立运行的基本单位，因而也是独立调度和分派的基本单位。由于线程很“轻”，故线程的切换非常迅速且开销小（在同一进程中的）。
	3）可并发执行。
	  在一个进程中的多个线程之间，可以并发执行，甚至允许在一个进程中所有线程都能并发执行；同样，不同进程中的线程也能并发执行，充分利用和发挥了处理机与外围设备并行工作的能力。
	

	4）共享进程资源。
	  在同一进程中的各个线程，都可以共享该进程所拥有的资源，这首先表现在：所有线程都具有相同的地址空间（进程的地址空间），这意味着，线程可以访问该地址空间的每一个虚地址；
	此外，还可以访问进程所拥有的已打开文件、定时器、信号量机构等。由于同一个进程内的线程共享内存和文件，所以线程之间互相通信不必调用内核。
	




